text = """
..................................................
.......................x.................N........
..................x...............................
............x................w.........D.....a....
.........6...........i.........D..............u...
........6.......................q................u
........................i....u.w...........a.2....
....................................u.12..........
..................................f.....D....0a...
.............................Q..D......c..N..f....
..............w..................................f
.........Y.............i...............q..a.......
............................2..........O...q......
.....6..G.....................R...................
..............................N...................
.U.......G................i...J.............0.....
Y..U................F......N......................
.T......Y.............H.................2.P.......
...............T.........F.8........H.............
..T...............F...............l..............0
................G.....e........18...Q.............
.......................F....................O.....
.....Y....U...................l....g..............
U........9........................................
.....................e..q..Q......................
.......X........e......................1Q..O......
............T.................gx......0..........t
...................l......9........P..............
.y...........9...............r.5.......j.P........
..z.........d.........g......................H....
................6.......r...........P.........O...
.A........................8...r...................
.4....W...Z...........9..................s..j.....
.z..W.........y...........og......................
..3.z.....R.....L....o.........................H..
.......yZ.c..W.......p..............s.............
............1..3.........L.........S..............
.......Z..4............o.....S...........5.......s
............c........l......7.....................
.....4....p.........I.......t...........5........j
.......c....h...........C..d......................
......n..........C......L............E....j.......
.X.W..........n....R......d.I...............5.....
3.........Cn.........L...r.............e..........
...A...........Z.p.....I..S.............s.......J.
....................7.............S...X....J......
........X.............o...........................
........A....h.R.....7.t...I......................
..A.4z......y.p..h.7...........Et.................
................h........3..E..d.8................
"""

text_test = """
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""


def read_input(text):
    res = []
    for line in text.split('\n'):
        if not line:
            continue

        res.append(line)

    return res


print(read_input(text_test))

from collections import defaultdict

def solve(text):
    ma = read_input(text)

    n,m = len(ma), len(ma[0])

    positions = defaultdict(list)

    for i, row in enumerate(ma):
        for j, c in enumerate(row):
            if c != '.':
                positions[c].append((i,j))

    antinodes = set()
    for letter, ps in positions.items():

        for x in ps:
            for y in ps:
                if x == y:
                    continue

                a,b = 2*x[0]-y[0], 2*x[1] - y[1]

                # check boundaries
                if 0 <= a < n and 0 <= b < m:
                    if (a,b) not in antinodes:
                        antinodes.add((a,b))

    return len(antinodes)

print(solve(text))



def solve2(text):
    ma = read_input(text)

    n,m = len(ma), len(ma[0])

    positions = defaultdict(list)

    for i, row in enumerate(ma):
        for j, c in enumerate(row):
            if c != '.':
                positions[c].append((i,j))

    antinodes = set()
    for letter, ps in positions.items():

        for x in ps:
            for y in ps:
                if x == y:
                    continue

                xo, yo = x[0]-y[0], x[1]-y[1]
                a,b = x

                # !!!question! do we have to divide both by gcd???
                # update: not needed. weird, but OK!
                for i in range(max(m,n)):
                    if 0 <= a + i * xo < n and 0 <= b + i *yo < m:
                        c,d = a + i * xo, b + i *yo
                        if (c,d) not in antinodes:
                            antinodes.add((c,d))
                    else:
                        break
                        


    return len(antinodes)

print(solve2(text))